00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/19/2014 7:41:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000  =00005000                  8  stack   EQU   $00005000
00000000  =00005001                  9  begin   EQU   $00005001
00000000  =00FFFFFE                 10  end     EQU   $00FFFFFE
00000000  =00000001                 11  byte    EQU   1
00000000  =00000002                 12  word    EQU   2
00000000  =00000004                 13  long    EQU   4
00000000                            14  
00000FFE                            15      ORG $00000FFE
00000FFE                            16  FarLabel:
00001000                            17      ORG    $1000
00001000                            18  start:
00001000  4FF8 5000                 19          LEA stack, SP ;initialize stack
00001004                            20          
00001004                            21          ;LEA startLocationPrompt,A1 ;prompt for start loaction
00001004                            22          ;MOVE.L  #13,D0
00001004                            23          ;TRAP    #15
00001004                            24          
00001004                            25          ;LEA     startLocation,A1 ;get start location
00001004                            26          ;BSR     parseHexString 
00001004                            27          ;LEA     startLocation,A3 ;store start location in A3
00001004                            28          ;MOVE.L  D0,(A3)
00001004                            29          
00001004                            30        ;  MOVE.L #$3000,A3
00001004                            31         
00001004  267C 00001082             32          MOVE.L #snippet,A3
0000100A                            33          
0000100A                            34          ;LEA endLocationPrompt,A1 ;prompt for end location
0000100A                            35          ;MOVE.L  #13,D0
0000100A                            36          ;TRAP    #15 
0000100A                            37          ;MOVE.B  #4,D0   ;get end location
0000100A                            38          ;TRAP    #15
0000100A                            39          ;LEA endLocation,A4 ;store end location in A4
0000100A                            40          ;MOVE.L  D0,(A4)
0000100A                            41          
0000100A  287C 00001090             42          MOVE.L  #snippetEnd,A4
00001010                            43          
00001010                            44  mainLoop:
00001010  B9CB                      45          CMPA.L A3,A4 ;check end of prog
00001012  6700 015A                 46          BEQ fin
00001016                            47          
00001016  3213                      48          MOVE.W (A3),D1 ;copy word from other prog to analyze as instruction
00001018                            49          
00001018  7600                      50          MOVEQ.L #0,D3
0000101A                            51          
0000101A                            52          ***things to save A3,A4,D1(?)***
0000101A  48E7 0018                 53          MOVEM.L A3-A4,-(SP)
0000101E  6100 000C                 54          BSR checkOPcode
00001022  4CDF 1800                 55          MOVEM.L (SP)+,A3-A4
00001026  D7C7                      56          ADDA.L  D7,A3 ;look past data that was part of the instruction
00001028                            57          
00001028  548B                      58          ADDQ.L  #word,A3
0000102A  60E4                      59          BRA     mainLoop 
0000102C                            60          
0000102C                            61  checkOPcode:
0000102C                            62  
0000102C                            63  
0000102C  41F9 0000105A             64          LEA     instOPList,A0 ;get instruction signitrue list in A0
00001032  D1C3                      65          ADDA.L  D3,A0 ;get correct sig         
00001034                            66          
00001034  43F9 00001064             67          LEA     instMaskList,A1 ;get instruction mask in A1
0000103A  D3C3                      68          ADDA.L  D3,A1  ;get correct mast
0000103C                            69          
0000103C  3401                      70          MOVE.W  D1,D2 ;move instruction into D2 for manipulaiton
0000103E                            71          
0000103E  C451                      72          AND.W   (A1),D2 ;mask instruction
00001040  B450                      73          CMP.W   (A0),D2 ;compare to sig
00001042  6700 0006                 74          BEQ     found ;if sig matches branch
00001046                            75          
00001046  5483                      76          ADDQ.L  #word,D3 ;if not found, add to D3 and check for next instruction
00001048  60E2                      77          BRA checkOPcode
0000104A                            78  
0000104A                            79  found:
0000104A                            80          
0000104A  43F9 0000106E             81          LEA     instLabelList,A1 ;get instruction code label
00001050  D3C3                      82          ADDA.L  D3,A1 ;get correct label
00001052  D3C3                      83          ADDA.L  D3,A1
00001054  2251                      84          MOVEA.L (A1),A1
00001056  4E91                      85          JSR     (A1)
00001058  4E75                      86          RTS
0000105A                            87          
0000105A                            88  
0000105A= 4400 4E71 0000 6...       89  instOPList DC.W negInstruction,NoOpInstruction,moveInstruction,braInstruction,dataInstruction         
00001064= FF00 FFFF C000 F...       90  instMaskList DC.W negMAsk,NoOpMask,moveMask,braMask,dataMask          
0000106E= 00001094 000010AE ...     91  instLabelList DC.L NEG,NOP, MOVE,BRA,unknownOpCode
00001082                            92  
00001082                            93  snippet:
00001082  4E71                      94           NOP
00001084  60FC                      95           BRA snippet
00001086  6000 FF76                 96           BRA FarLabel
0000108A  123C 0004                 97           MOVE.B #4,D1
0000108E  4441                      98           NEG D1
00001090                            99           
00001090                           100  snippetEnd:
00001090  FFFF FFFF                101           SIMHALT
00001094                           102          
00001094                           103  
00001094                           104  NEG:
00001094                           105          
00001094  43F9 00001251            106          LEA     negMessage,A1  ;move string for NEG info
0000109A  103C 000E                107          MOVE.B  #14,D0        ;set for task to display null terminated 
0000109E                           108                                ;string without CR, LF
0000109E  4E4F                     109          TRAP    #15
000010A0                           110          
000010A0  43F9 00001222            111          LEA     clearLine,A1  ;move string for a CR and LF
000010A6  103C 000E                112          MOVE.B  #14,D0        ;set for task to display null terminated 
000010AA                           113                                ;string without CR, LF
000010AA  4E4F                     114          TRAP    #15
000010AC                           115          
000010AC  4E75                     116          RTS
000010AE                           117  
000010AE                           118  
000010AE                           119          
000010AE                           120  NOP:
000010AE                           121  
000010AE  43F9 00001243            122          LEA     nopMessage,A1  ;move string for NOP info
000010B4  103C 000D                123          MOVE.B  #13,D0        ;set for task to display null terminated 
000010B8                           124                                ;string with CR, LF
000010B8  4E4F                     125          TRAP    #15
000010BA                           126  
000010BA  4E75                     127          RTS
000010BC                           128  MOVE:
000010BC                           129          
000010BC                           130          
000010BC                           131  
000010BC  3401                     132          MOVE.W  D1,D2
000010BE  EC4A                     133          LSR     #6,D2
000010C0  C43C 0007                134          AND.B   #%00000111,D2
000010C4                           135          
000010C4  0C02 0001                136          CMPI.B  #1,D2
000010C8  6700 0020                137          BEQ     MOVEA
000010CC                           138          
000010CC  3401                     139          MOVE.W  D1,D2 ;check source mode
000010CE  E64A                     140          LSR     #3,D2   
000010D0  C47C 0007                141          AND.W   #$0007,D2
000010D4                           142          
000010D4  3401                     143          MOVE.W  D1,D2 ;check source reg
000010D6  C47C 0007                144          AND.W   #$0007,D2
000010DA                           145          
000010DA                           146          
000010DA                           147          
000010DA  43F9 00001247            148          LEA     moveMessage,A1  ;move string for MOVE
000010E0  103C 000D                149          MOVE.B  #13,D0        ;set for task to display null terminated 
000010E4                           150                                ;string with CR, LF
000010E4  4E4F                     151          TRAP    #15
000010E6                           152  
000010E6  7E00                     153          MOVEQ.L #0,D7
000010E8  4E75                     154          RTS
000010EA                           155          
000010EA                           156  MOVEA:
000010EA  43F9 0000125C            157          LEA     moveAMessage,A1  ;move string for MOVE
000010F0  103C 000D                158          MOVE.B  #13,D0        ;set for task to display null terminated 
000010F4                           159                                ;string with CR, LF
000010F4  4E4F                     160          TRAP    #15
000010F6                           161  
000010F6  4E75                     162          RTS
000010F8                           163  
000010F8                           164             
000010F8                           165  BRA:
000010F8                           166  
000010F8  43F9 0000124C            167          LEA     braMessage,A1  ;move string for BRA info
000010FE  103C 000E                168          MOVE.B  #14,D0        ;set for task to display null terminated 
00001102                           169                                ;string without CR, LF
00001102  4E4F                     170          TRAP    #15
00001104                           171          
00001104  548B                     172          ADDQ.L  #word,A3 ;move past instruction in case long displacement
00001106  C27C 00FF                173          AND.W   #$00FF,D1   ;check for word sized displacement
0000110A                           174          
0000110A  B23C 0000                175          CMP.B   #$0,D1
0000110E  6700 0010                176          BEQ     BRAWord
00001112                           177          
00001112  B23C 00FF                178          CMP.B   #$FF,D1 check for long sized displacement
00001116  6700 0010                179          BEQ     BRALong
0000111A                           180          
0000111A                           181  BRAByte:
0000111A                           182          
0000111A  7E00                     183          MOVEQ.L #0,D7 ;pass back no extra data followed
0000111C  6000 0012                184          BRA     BRADone
00001120                           185  BRAWord:
00001120  3213                     186          MOVE.W  (A3),D1
00001122                           187          
00001122  7E02                     188          MOVEQ.L #word,D7 ;pass back an extra word followed
00001124  6000 000A                189          BRA     BRADone
00001128                           190  BRALong:
00001128  2213                     191          MOVE.L  (A3),D1
0000112A                           192          
0000112A  7E04                     193          MOVEQ.L #long,D7 ;pass back an extra long followed
0000112C  6000 0002                194          BRA     BRADone
00001130                           195  BRADone:
00001130                           196  
00001130  343C 0010                197          MOVE.W  #16,D2 ;put base in D2
00001134  303C 000F                198          MOVE.W  #15,D0  ;put task #15 in D0
00001138  4E4F                     199          TRAP    #15
0000113A                           200          
0000113A  43F9 00001222            201          LEA     clearLine,A1  ;move string for a CR and LF
00001140  103C 000E                202          MOVE.B  #14,D0        ;set for task to display null terminated 
00001144                           203                                ;string without CR, LF
00001144  4E4F                     204          TRAP    #15
00001146                           205  
00001146                           206          
00001146  4E75                     207          RTS
00001148                           208          
00001148                           209          
00001148                           210  unknownOpCode:
00001148  43F9 00001255            211          LEA     dataMessage,A1 ;move string for data info
0000114E  103C 000E                212          MOVE.B  #14,D0        ;set for task to display null terminated 
00001152                           213                                ;string without CR, LF
00001152  4E4F                     214          TRAP    #15
00001154                           215          
00001154  143C 0010                216          MOVE.B  #16,D2        ;set for displaying a base16(hex) number
00001158  103C 000F                217          MOVE.B  #15,D0
0000115C  4E4F                     218          TRAP    #15
0000115E  43F9 00001222            219          LEA     clearLine,A1  ;move string for a CR and LF
00001164  103C 000E                220          MOVE.B  #14,D0        ;set for task to display null terminated 
00001168                           221                                ;string without CR, LF
00001168  4E4F                     222          TRAP    #15
0000116A                           223          
0000116A  7E00                     224          MOVEQ.L #0,D7
0000116C  4E75                     225          RTS
0000116E                           226          
0000116E                           227  fin
0000116E                           228  
0000116E                           229          
0000116E                           230          
0000116E  FFFF FFFF                231          simhalt
00001172                           232          
00001172                           233          
00001172                           234  
00001172                           235  ***Pre:     Hex String is at (A1) and null terminated
00001172                           236  ***         A2 is free to be used to store initial value of A1
00001172                           237  ***Post:    Value in hex is in D0  
00001172                           238  parseHexString:
00001172                           239          
00001172  2449                     240          MOVEA.L A1,A2 
00001174  103C 0002                241          MOVE.B  #2,D0 ;ask user for string  
00001178  4E4F                     242          TRAP    #15
0000117A                           243          
0000117A  B27C 0009                244          CMP.W   #9,D1
0000117E  6E00 0066                245          BGT     badHexString
00001182                           246          
00001182  0C11 0024                247          CMP.B   #'$',(A1)
00001186  6600 005E                248          BNE     badHexString
0000118A  5289                     249          ADDQ.L  #byte,A1
0000118C  7000                     250          MOVEQ.L #0,D0 ;clear D0
0000118E  7408                     251          MOVEQ.L #8,D2 ;prevent trying to read more than 4 bytes
00001190                           252          
00001190                           253  HexStringBody:
00001190                           254          
00001190  0C11 0000                255          CMP.B   #0,(A1) ;if reach zero, end of string
00001194  6700 002E                256          BEQ     HexStringDone
00001198  B43C 0000                257          CMP.B   #0,D2 ;check how many nybbles have been read
0000119C  6D00 0026                258          BLT     HexStringDone
000011A0                           259                
000011A0  0C11 0030                260          CMP.B   #'0',(A1)
000011A4  6D00 0040                261          BLT     badHexString
000011A8  0C11 0039                262          CMP.B   #'9',(A1)
000011AC  6F00 0018                263          BLE     hexNumber
000011B0                           264          
000011B0  0C11 0041                265          CMP.B   #'A',(A1)
000011B4  6D00 0030                266          BLT     badHexString
000011B8  0C11 0046                267          CMP.B   #'F',(A1)
000011BC  6F00 0016                268          BLE     hexAlpha
000011C0  6000 0024                269          BRA     badHexString
000011C4                           270          
000011C4                           271          
000011C4                           272  HexStringDone:
000011C4                           273          
000011C4  4E75                     274          RTS
000011C6                           275  HexNumber:
000011C6  E988                     276          LSL.L   #4,D0
000011C8  1211                     277          MOVE.B (A1),D1
000011CA  0401 0030                278          SUB.B  #'0',D1
000011CE  D081                     279          ADD.L  D1,D0
000011D0  5289                     280          ADDQ.L #byte,A1
000011D2  60BC                     281          BRA HexStringbody
000011D4                           282  HexAlpha:
000011D4  E988                     283          LSL.L   #4,D0
000011D6  1211                     284          MOVE.B (A1),D1
000011D8  0401 0041                285          SUB.B  #'A',D1
000011DC  0601 000A                286          ADD.B  #10,D1
000011E0  D081                     287          ADD.L  D1,D0
000011E2  5289                     288          ADDQ.L #byte,A1
000011E4                           289  
000011E4  60AA                     290          BRA HexStringbody
000011E6                           291  badHexString:
000011E6                           292          
000011E6  43F9 00001225            293          LEA     invalidHexStringMessage,A1
000011EC  700D                     294          MOVE.L  #13,D0
000011EE  4E4F                     295          TRAP    #15
000011F0  224A                     296          MOVEA.L A2,A1
000011F2  6000 FF7E                297          BRA parseHexString
000011F6                           298  
000011F6  FFFF FFFF                299      SIMHALT             ; halt simulator
000011FA                           300  
000011FA                           301  
000011FA                           302  
000011FA                           303  
000011FA                           304  
000011FA                           305  
000011FA                           306  * Put variables and constants here
000011FA                           307  
000011FA                           308  ***list of OP codes
000011FA                           309  
000011FA  =00004E71                310  NoOpInstruction  EQU %0100111001110001
000011FA  =00000000                311  moveInstruction  EQU 0
000011FA  =00006000                312  braInstruction   EQU %0110000000000000
000011FA  =00004400                313  negInstruction   EQU %0100010000000000
000011FA  =00000000                314  dataInstruction  EQU 0
000011FA                           315  
000011FA                           316  ***
000011FA                           317  
000011FA                           318  ***list of OP masks
000011FA                           319  
000011FA  =0000FFFF                320  NoOpMask  EQU $FFFF
000011FA  =0000C000                321  moveMask  EQU $C000
000011FA  =0000FF00                322  braMask   EQU $FF00
000011FA  =0000FF00                323  negMask   EQU $FF00
000011FA  =00000000                324  dataMask  EQU 0
000011FA                           325  ***
000011FA                           326  
000011FA                           327  
000011FA= 45 6E 74 65 72 20 ...    328  startLocationPrompt DC.B    'Enter start location',0
0000120F= 45 6E 74 65 72 20 ...    329  endLocationPrompt   DC.B    'Enter end location',0
00001222                           330  
00001222= 0D 0A 00                 331  clearLine  DC.B $0D,$0A,0
00001225                           332  
00001225= 49 6E 76 61 6C 69 ...    333  invalidHexStringMessage DC.B 'Invalid Hex. Please try again',0
00001243                           334  
00001243                           335  
00001243= 4E 4F 50 00              336  nopMessage  DC.B 'NOP',0 
00001247= 4D 4F 56 45 00           337  moveMessage DC.B 'MOVE',0
0000124C= 42 52 41 20 00           338  braMessage  DC.B 'BRA ',0
00001251= 4E 45 47 00              339  negMessage  DC.B 'NEG',0
00001255= 44 41 54 41 3A 20 00     340  dataMessage DC.B 'DATA: ',0
0000125C                           341  
0000125C                           342  
0000125C= 4D 4F 56 45 41 00        343  moveaMessage DC.B 'MOVEA',0
00001262                           344  
00001262                           345  
00001262= 00000000                 346  startLocation       DC.L    0
00001266= 00000000                 347  endLocation         DC.L    0
0000126A                           348  
0000126A                           349  
0000126A                           350     
0000126A                           351      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BADHEXSTRING        11E6
BEGIN               5001
BRA                 10F8
BRABYTE             111A
BRADONE             1130
BRAINSTRUCTION      6000
BRALONG             1128
BRAMASK             FF00
BRAMESSAGE          124C
BRAWORD             1120
BYTE                1
CHECKOPCODE         102C
CLEARLINE           1222
DATAINSTRUCTION     0
DATAMASK            0
DATAMESSAGE         1255
END                 FFFFFE
ENDLOCATION         1266
ENDLOCATIONPROMPT   120F
FARLABEL            FFE
FIN                 116E
FOUND               104A
HEXALPHA            11D4
HEXNUMBER           11C6
HEXSTRINGBODY       1190
HEXSTRINGDONE       11C4
INSTLABELLIST       106E
INSTMASKLIST        1064
INSTOPLIST          105A
INVALIDHEXSTRINGMESSAGE  1225
LONG                4
MAINLOOP            1010
MOVE                10BC
MOVEA               10EA
MOVEAMESSAGE        125C
MOVEINSTRUCTION     0
MOVEMASK            C000
MOVEMESSAGE         1247
NEG                 1094
NEGINSTRUCTION      4400
NEGMASK             FF00
NEGMESSAGE          1251
NOOPINSTRUCTION     4E71
NOOPMASK            FFFF
NOP                 10AE
NOPMESSAGE          1243
PARSEHEXSTRING      1172
SNIPPET             1082
SNIPPETEND          1090
STACK               5000
START               1000
STARTLOCATION       1262
STARTLOCATIONPROMPT  11FA
UNKNOWNOPCODE       1148
WORD                2
