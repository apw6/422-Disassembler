00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/8/2014 2:11:48 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  *
00000000                             3  * This is a program to read a byte from $7000 to $8000
00000000                             4  * and look for the pattern in memory. If the pattern is found
00000000                             5  * then the address of the word is stored in the location at Address2. If no pattern match
00000000                             6  * is found the program stores $00000000 in the A2 location.
00000000                             7  * The ____DESCRIPTION_____ algorithm assumes that the _____x____ is located on a word
00000000                             8  * boundary.
00000000                             9  *
00000000                            10  *-----------------------------------------------------------
00000000                            11      OPT CRE
00000000                            12      
00000000                            13  *****Symbols*****
00000000  =00001000                 14  prog_st     EQU $00001000 ;start of program to be disassembled
00000000  =000010F0                 15  prog_end    EQU $000010F0 ;end of program to be disassembled
00000000  =00001000                 16  start       EQU $1000      ;this program's instructions begin here in memory
00000000  =00002700                 17  exit        EQU $2700     ;
00000000  =00000001                 18  byte        EQU 1         ;makes it clear when adding to a memory address,
00000000                            19                            ;1 is a byte
00000000                            20  
00001000                            21      ORG    start
00001000                            22  
00001000  45F8 1000                 23          LEA     prog_st,A2  ;load start of prog into address reg A0
00001004  47F8 10F0                 24          LEA     prog_end,A3 ;load end of prog into address reg A1
00001008                            25  loopStart:
00001008  1212                      26          MOVE.B  (A2),D1
0000100A  6000 000C                 27          BRA     checkOpCode
0000100E                            28  loopBody:
0000100E  528A                      29          ADDQ.L  #byte,A2
00001010  B7CA                      30          CMPA.L  A2,A3
00001012  6D00 002C                 31          BLT     endOfProg
00001016  60F0                      32          BRA     loopStart
00001018                            33          
00001018                            34  checkOPcode:
00001018  6000 0002                 35          BRA     unknownOpCode
0000101C                            36          
0000101C                            37  unknownOpCode:
0000101C  43F9 00001040             38          LEA     dataString,A1 ;move string for data info
00001022  103C 000E                 39          MOVE.B  #14,D0        ;set for task to display null terminated 
00001026                            40                                ;string without CR, LF
00001026  4E4F                      41          TRAP    #15
00001028                            42          
00001028  143C 0010                 43          MOVE.B  #16,D2        ;set for displaying a base16(hex) number
0000102C  103C 000F                 44          MOVE.B  #15,D0
00001030  4E4F                      45          TRAP    #15
00001032  43F9 00001047             46          LEA     clearLine,A1  ;move string for a CR and LF
00001038  103C 000E                 47          MOVE.B  #14,D0        ;set for task to display null terminated 
0000103C                            48                                ;string without CR, LF
0000103C  4E4F                      49          TRAP    #15
0000103E  60CE                      50          BRA     loopBody
00001040                            51          
00001040                            52  endOfProg:
00001040                            53  
00001040                            54  
00001040                            55  *****Constants*****
00001040= 44 41 54 41 3A 20 00      56  dataString DC.B 'DATA: ',0
00001047= 0D 0A 00                  57  clearLine  DC.B $0D,$0A,0
0000104A                            58      END  start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BYTE                1
CHECKOPCODE         1018
CLEARLINE           1047
DATASTRING          1040
ENDOFPROG           1040
EXIT                2700
LOOPBODY            100E
LOOPSTART           1008
PROG_END            10F0
PROG_ST             1000
START               1000
UNKNOWNOPCODE       101C
